(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{539:function(t,a,e){t.exports=e.p+"assets/img/BillDataDto.caa9ccdb.png"},613:function(t,a,e){"use strict";e.r(a);var s=e(24),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"rule规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule规则"}},[t._v("#")]),t._v(" rule规则")]),t._v(" "),s("p",[t._v("用友单据的直接操作,都是执行一串rule规则来完成的.来解析一下这个rule规则.")]),t._v(" "),s("p",[t._v("首先rule是什么时候出现的?")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("有一些默认的rule,比如common的,自己也可以配置一些单据基本的rule,rule默认的是0租户的,只有两种情况才会把rule复制一份给租户,1-新开租户的时候,2-租户升级的时候.\n")])])]),s("p",[t._v("下面是一些rule执行的流程.")]),t._v(" "),s("h2",{attrs:{id:"_1-billdatadto-前台参数解析及后台简单处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-billdatadto-前台参数解析及后台简单处理"}},[t._v("#")]),t._v(" 1.BillDataDto.前台参数解析及后台简单处理")]),t._v(" "),s("p",[t._v("这个对象,就是单据数据对象,负责将单据的数据传递给后台处理.介绍几个常用的属性吧.")]),t._v(" "),s("ol",{attrs:{start:"0"}},[s("li",[t._v("前端传输截图举例:")])]),t._v(" "),s("p",[s("img",{attrs:{src:e(539),alt:"billDatadto"}})]),t._v(" "),s("ol",[s("li",[s("p",[t._v("private FilterVO condition;")]),t._v(" "),s("p",[t._v("不是给开发自己用的,是平台service用的.")]),t._v(" "),s("p",[t._v("对应元数据普通查询条件.类型是FilterVO.这个FilterVO中,最常用的事simpleVOs,是个数组,多个条件.")]),t._v(" "),s("p",[t._v("当然后续还可以继续在后台给他添加condition.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("billDataDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendCondition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProjectScheduleConsts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TASK_STATUS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"in"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" statusArr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbillDataDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendCondition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProjectScheduleConsts")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PLAN_END_DATE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dateStrParseDate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DateUtil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INSTANCE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getToday")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("private String billnum;(其实这家伙在他父类中BaseDto)")]),t._v(" "),s("p",[t._v("单据编码,代码当前是哪个单据.")])]),t._v(" "),s("li",[s("p",[t._v("private Map<String, Object> custMap;")]),t._v(" "),s("p",[t._v("自己有什么属性,可以放这里,自己取出来用.")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" custMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" billDataDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCustMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("custMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("custMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//....")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"_2-ibillservice-处理billdatadto的家伙"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-ibillservice-处理billdatadto的家伙"}},[t._v("#")]),t._v(" 2.IBIllService.-处理BIllDataDto的家伙")]),t._v(" "),s("p",[t._v("这里面方法可多了去了.挑常用的介绍.")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("public Pager queryByPage(BillDataDto bill) throws Exception;")]),t._v(" "),s("p",[t._v("分页查询")])]),t._v(" "),s("li",[s("p",[t._v("public RuleExecuteResult save(BillDataDto bill) throws Exception;")]),t._v(" "),s("p",[t._v("保存单据")])]),t._v(" "),s("li",[s("p",[t._v("public RuleExecuteResult delete(BillDataDto bill) throws Exception;")]),t._v(" "),s("p",[t._v("删除单据")])]),t._v(" "),s("li",[s("p",[t._v("public Object getRefData(BillDataDto bill) throws Exception;")]),t._v(" "),s("p",[t._v("查询参照的")])]),t._v(" "),s("li",[s("p",[t._v("public ExcelExportData export(BillDataDto bill) throws Exception;")]),t._v(" "),s("p",[t._v("导出")])]),t._v(" "),s("li",[s("p",[t._v("public ResultList billImport(BillDataDto bill) throws Exception;")]),t._v(" "),s("p",[t._v("导入")])])]),t._v(" "),s("h2",{attrs:{id:"_3-save为例-深入探索"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-save为例-深入探索"}},[t._v("#")]),t._v(" 3.save为例,深入探索")]),t._v(" "),s("p",[t._v("IBillService中save的实现是DefaultBillService实现的,其中DefaultBillService又调用了BillBiz来执行save.进来BIllBiz后,创建个BIllBizSaveService代理对象IBillBizProxy(这时候已经给BIllBizProxy中的target赋值了),然后doExecute-billBizProxy.doExecute(bill, null, false);.")]),t._v(" "),s("p",[t._v("到了代理类中,判断是否手动传了action,异步等信息,这里都假设是同步的,走invoke,进实际的service执行execute方法.(这里就是BillBizSaveService类),")]),t._v(" "),s("p",[t._v("具体的实现类的execute中,最重要的是")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonOperator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OperationTypeEnum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SAVE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这个CommonIOperator里面穿进去各种操作类型.看看他的构造方法,这里"),s("strong",[t._v("set了一个action")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommonOperator")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OperationTypeEnum")]),t._v(" operationTypeEnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleOperatorProxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("operationTypeEnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operationTypeEnum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" operationTypeEnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("action "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" operationTypeEnum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//action在这里赋值了!")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMakeup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后他就开始执行自己的execute了,首先get了单据上下文,然后就去执行rule了,调用了")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("proxy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("billContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这个proxy,就是构造方法里那个.")]),t._v("\n")])])]),s("p",[t._v("准备去执行了.")]),t._v(" "),s("h2",{attrs:{id:"_4-rule开始了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-rule开始了"}},[t._v("#")]),t._v(" 4.Rule开始了")]),t._v(" "),s("p",[t._v("RuleOperatorProxy,是rule执行的开始类.")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("首先要拿到rules")]),t._v(" "),s("p",[s("code",[t._v("doGetRuleQueue(billContext, bill, commonKey);")]),t._v(",在这里面,首先由于我们看到action传递的是null,而后又设置成了"),s("code",[t._v("operationTypeEnum.getValue()")]),t._v(",所以,这里判断action时候,为null,所以取得是"),s("code",[t._v("operationTypeEnum.getValue()")]),t._v(",也就是save.")]),t._v(" "),s("p",[t._v("继续在往下走,就是RuleEngine去查询rules了."),s("code",[t._v("RuleEngine.getInstance().doGetRules(context)")]),t._v(".稍后介绍RuleEngine.")])]),t._v(" "),s("li",[s("p",[t._v("拿到rules以后,就是doExecRules了,同样是RuleEngine,"),s("code",[t._v("RuleEngine.getInstance().doExecRules(buildRuleContext(billContext, paramMap), ruleList)")]),t._v(";")])])]),t._v(" "),s("h2",{attrs:{id:"_5-ruleengine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-ruleengine"}},[t._v("#")]),t._v(" 5.RuleEngine")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("doGetRules")]),t._v(" "),s("p",[t._v("实际干活的是DefaultRuleListHandler."),s("code",[t._v("public Queue<RuleRegister> getAndFilterRules(String billnum, String action, String ruleKey, Object tenantId, String[] ruleLvsOri)")]),t._v(".拿到并且过滤rule.  下面有详细讲到.")])]),t._v(" "),s("li",[s("p",[t._v("doExecRules")]),t._v(" "),s("p",[t._v("这个就是调用IExecRulesHandler来执行了."),s("code",[t._v("execRulesHandler.doExecRules(ruleContext, ruleList);")]),t._v(",他的默认实现就是DefaultExecRulesHandler,")])])]),t._v(" "),s("h2",{attrs:{id:"_6-defaultrulelisthandler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-defaultrulelisthandler"}},[t._v("#")]),t._v(" 6.DefaultRuleListHandler")]),t._v(" "),s("h3",{attrs:{id:"_1-getandfilterrules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-getandfilterrules"}},[t._v("#")]),t._v(" 1.getAndFilterRules.")]),t._v(" "),s("p",[t._v("说一下,getAndFilterRules这个方法很重要,里面调用了")]),t._v(" "),s("p",[s("code",[t._v("RuleUtil.getBillNumRuleFromCache(tenantId, billnum, ruleLvsOri, action);")]),t._v("(默认缓存是开启的,也就是从缓存里取rule).")]),t._v(" "),s("p",[s("code",[t._v("filterRules")]),t._v("方法,根据表单billnum过滤.")]),t._v(" "),s("p",[s("code",[t._v("overrideRule")]),t._v("方法,覆盖rule. 如果想覆盖rule,看看这个.规则覆盖规则： 规则目前分为三个级别 单据级、模块级、公共级 在规则覆盖时，依次从高到底进行覆盖")]),t._v(" "),s("h2",{attrs:{id:"_7-defaultexecruleshandler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-defaultexecruleshandler"}},[t._v("#")]),t._v(" 7.DefaultExecRulesHandler")]),t._v(" "),s("h3",{attrs:{id:"_1-doexecrules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-doexecrules"}},[t._v("#")]),t._v(" 1.doExecRules.")]),t._v(" "),s("p",[t._v("它里面就是doExecRules这个方法了,遍历执行rule.")]),t._v(" "),s("p",[s("code",[t._v("public <T> RuleExecuteResult doExecRules(RuleContext ruleContext, Queue<? extends RuleRegister> ruleRegisterList) throws Exception.")])]),t._v(" "),s("p",[t._v("这个RuleRegister是一个rule的信息,里面有billnum,ruleId等信息,在执行过程中,将这些信息get到bean,也就是我们继承自AbstractCommonRule,实现了IRule接口的那些bean.")])])}),[],!1,null,null,null);a.default=n.exports}}]);